	using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ListTesting
{
    class Program
    {
        static void Main(string[] args)
        {
            var input = Console.ReadLine();
            var words = input.ToLower().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);

            var count = new Dictionary<string, int>();
            foreach (var word in words)
            {
                if (count.ContainsKey(word))
                {
                    count[word]++;
                } else
                {
                    count[word] = 1;
                }
            }

            List<string> result = new List<string>();
            foreach (var item in count)
            {
                if (item.Value % 2 != 0)
                {
                    result.Add(item.Key);
                }
            }
            Console.WriteLine(String.Join(", ", result));
        }
    }
}

-------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ListTesting
{
    class Program
    {
        static void Main(string[] args)
        {
            var input = Console.ReadLine();
            var words = input.ToLower().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);

            var count = new Dictionary<string, int>();
            foreach (var word in words)
            {
                count[word] = 0;
            }
            foreach (var word in words)
            {
                count[word]++;
            }
            List<string> result = new List<string>();
            foreach (var item in count)
            {
                if (item.Value % 2 != 0)
                {
                    result.Add(item.Key);
                }
            }
            Console.WriteLine(String.Join(", " , result));
        }
    }
}

-----
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

public class Example
{
    public static void Main()
    {
        string[] sequence = Console.ReadLine().ToLower().Split();
        Dictionary<string, int> words = new Dictionary<string, int>();

        foreach (var word in sequence)
        {
            if (words.ContainsKey(word))
            {
                words[word]++;
            }
            else
            {
                words[word] = 1;
            }
        }

        List<string> odd = new List<string>();

        foreach (var item in words)
        {
            if (item.Value % 2 != 0)
            {
                odd.Add(item.Key);
            }
        }

        Console.WriteLine(String.Join("," , odd));
    }
}



